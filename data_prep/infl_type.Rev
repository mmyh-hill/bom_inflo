morpho <- readDiscreteCharacterData("data/type.nexus")

phylogeny <- readTrees("data/bom_only_MAP.tre")[1]

moves = VectorMoves()
monitors = VectorMonitors()

rate_pr := phylogeny.treeLength() / 10
mu ~ dnExp(rate_pr)
moves.append( mvScale(mu, lambda=1, weight=2.0) )

NUM_STATES = 3

NUM_RATES = NUM_STATES * (NUM_STATES-1)
for ( i in 1:NUM_RATES ) {
    rate[i] := mu
}

Q_morpho := fnFreeK( rate, rescale=false )
phyMorpho ~ dnPhyloCTMC(tree=phylogeny, Q=Q_morpho, type="Standard")
phyMorpho.clamp(morpho)
mymodel = model(phylogeny)
monitors.append( mnModel(filename="output/infl_type.log", printgen=10) )
monitors.append( mnScreen(printgen=100) )
monitors.append( mnJointConditionalAncestralState(tree=phylogeny,
                                                   ctmc=phyMorpho,
                                                   filename="output/infl_type.states.txt",
                                                   type="Standard",
                                                   printgen=1,
                                                   withTips=true,
                                                   withStartStates=false) )

mymcmc = mcmc(mymodel, monitors, moves, nruns=2)
mymcmc.run(generations=25000, tuningInterval=200)

anc_states = readAncestralStateTrace("output/infl_type.states.txt")
anc_tree = ancestralStateTree(tree=phylogeny, ancestral_state_trace_vector=anc_states, include_start_states=false, file="output/infl_type_ase_ERM.tree", burnin=0, summary_statistic="MAP", site=1)

